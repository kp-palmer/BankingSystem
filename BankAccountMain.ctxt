#BlueJ class context
comment0.target=BankAccountMain
comment0.text=\n\ Write\ a\ description\ of\ class\ BankAccountMain\ here.\n\n\ @author\ (Kristen)\n\ @version\ (1.0)\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ choices()
comment3.params=un\ password
comment3.target=void\ makeAccount(java.lang.String,\ java.lang.String)
comment3.text=\n\ @param\ un\:\ username\ of\ user\n\ @param\ password\:\ unhashed\ password\ of\ user\n\ \n\ Generates\ random\ salt\ for\ user\ and\ hashes\ password\ accordingly\n\ \n\ Creates\ user\ with\ random\ user\ identifier\ link\ (userLink),\ \n\ lowercase\ username,\ hashed\ password,\ and\ user\ salt;\ adds\ user\ \n\ information\ to\ file\ and\ to\ userAccounts\ ArrayList\n
comment4.params=username
comment4.target=int\ userInData(java.lang.String)
comment4.text=\n\ Checks\ to\ see\ if\ the\ given\ username\ is\ in\ the\ list\ of\ users\n\ @returns\ i\:\ index\ of\ username\ in\ accounts,\ or\ -1\ if\n\ username\ isn't\ found\n
comment5.params=input
comment5.target=void\ signIn(java.lang.String)
comment5.text=\n\ Prompts\ user\ to\ input\ username,\ and\ checks\ to\ see\ if\ it's\ in\ the\n\ database.\ If\ it\ is,\ it\ prompts\ user\ to\ input\ a\ password.\ If\ the\ \n\ hashed\ (password\ +\ user\ salt)\ matches\ the\ hashed\ password,\ the\ user\n\ can\ access\ the\ account.\n
comment6.params=
comment6.target=void\ fileStatus()
comment6.text=\n\ Creates\ files\ of\ given\ names\ if\ they\ don't\ exist,\ otherwise\ just\n\ sets\ files\ to\ read\ only\n
comment7.params=userFile\ accountFile
comment7.target=void\ getDataFromFile(java.io.File,\ java.io.File)
comment7.text=\n\ \n
comment8.params=obj\ file\ bw
comment8.target=void\ putInfoOnFile(java.lang.Object,\ java.io.File,\ java.io.BufferedWriter)
comment8.text=\n\ @param\ o\:\ object\ that\ will\ be\ written\ to\ file,\ will\ be\ either\ a\ user\ or\ a\ bank\ account\n\ @param\ file\:\ file\ to\ write\ information\ to\n\ @param\ bw\:\ Corresponding\ BufferedReader\ for\ specified\ file\n\ \n\ Writes\ the\ information\ of\ the\ object\ to\ the\ text\ file\n
comment9.params=pFile\ aFile
comment9.target=void\ rewrite(java.io.File,\ java.io.File)
comment9.text=\n\ \n
numComments=10
